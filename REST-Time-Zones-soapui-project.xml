<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="4ad0f4a8-a010-4044-8078-2c4824708e4d" activeEnvironment="Default" name="REST_Time_Zones" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" resourceRoot="" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="72f6ff1c-d17c-4374-8fab-421419730d94" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://api.timezonedb.com" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://api.timezonedb.com</con:endpoint></con:endpoints><con:resource name="List-time-zone" path="/v2/list-time-zone" id="a86e89cd-4809-4ff5-8458-5afaf6af7585"><con:settings/><con:parameters><con:parameter><con:name>key</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>callback</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>fields</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>country</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>zone</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>format</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="List-time-zone 1" id="ffff8718-0919-4af4-b74d-0545e6e3c83a" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>result</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:list="http://api.timezonedb.com/v2/list-time-zone">list:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>503</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="getListTimeZone" id="71dc1f55-fb02-4db7-af99-039203f2386e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.timezonedb.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="key" value="4QBT9RW8XQ1O" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>format</con:entry><con:entry>callback</con:entry><con:entry>fields</con:entry><con:entry>country</con:entry><con:entry>zone</con:entry><con:entry>key</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="get-time-zone" path="/v2/get-time-zone" id="07a14627-c0f5-48b8-a00e-9fce79c9593f"><con:settings/><con:parameters/><con:method name="getTimeZoneByZone" id="bbf7cded-af95-4579-bb4b-0b60b828c701" method="GET"><con:settings/><con:parameters><con:parameter><con:name>key</con:name><con:value>4QBT9RW8XQ1O</con:value><con:style>QUERY</con:style><con:default>4QBT9RW8XQ1O</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>by</con:name><con:value>zone</con:value><con:style>QUERY</con:style><con:default>zone</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>zone</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:request name="getTimeZoneByZone" id="b766832f-ae3d-4341-9ecf-4d66a461b8fa" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.timezonedb.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>key</con:entry><con:entry>by</con:entry><con:entry>zone</con:entry></con:parameterOrder></con:request></con:method><con:method name="getTimeZoneByPosition" id="bbf7cded-af95-4579-bb4b-0b60b828c701" method="GET"><con:settings/><con:parameters><con:parameter><con:name>key</con:name><con:value>4QBT9RW8XQ1O</con:value><con:style>QUERY</con:style><con:default>4QBT9RW8XQ1O</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>by</con:name><con:value>position</con:value><con:style>QUERY</con:style><con:default>position</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>lat</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>lng</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:request name="getTimeZoneByPosition" id="b766832f-ae3d-4341-9ecf-4d66a461b8fa" mediaType="application/json"><con:settings/><con:endpoint>http://api.timezonedb.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>key</con:entry><con:entry>by</con:entry><con:entry>lat</con:entry><con:entry>lng</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:WsdlInterface" id="53c4c6f2-bd5e-434b-a5c0-98c11d027e97" wsaVersion="NONE" name="MediCareSupplierSoap12" type="wsdl" bindingName="{http://www.webservicex.net/}MediCareSupplierSoap12" soapVersion="1_2" anonymous="optional" definition="http://webservicex.net/medicareSupplier.asmx?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://webservicex.net/medicareSupplier.asmx</con:endpoint></con:endpoints><con:operation id="6da14f51-76cd-40b0-b191-b1bb316aac1a" isOneWay="false" action="http://www.webservicex.net/GetSupplierByCity" name="GetSupplierByCity" bindingOperationName="GetSupplierByCity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="413860c1-f3c9-468c-acfa-566f02c82877" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.webservicex.net/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:GetSupplierByCity>\r
         <!--Optional:-->\r
         <web:City>?</web:City>\r
      </web:GetSupplierByCity>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/MediCareSupplierSoap/GetSupplierByCityRequest"/></con:call></con:operation><con:operation id="1c7dbe90-d3de-4866-b4ca-7fa2fe719b66" isOneWay="false" action="http://www.webservicex.net/GetSupplierBySupplyType" name="GetSupplierBySupplyType" bindingOperationName="GetSupplierBySupplyType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="db0eff5a-c32d-4009-ba2d-bc137071a19c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.webservicex.net/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:GetSupplierBySupplyType>\r
         <!--Optional:-->\r
         <web:description>?</web:description>\r
      </web:GetSupplierBySupplyType>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/MediCareSupplierSoap/GetSupplierBySupplyTypeRequest"/></con:call></con:operation><con:operation id="6ce1c45d-1278-4ae5-acbe-6978db941296" isOneWay="false" action="http://www.webservicex.net/GetSupplierByZipCode" name="GetSupplierByZipCode" bindingOperationName="GetSupplierByZipCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0f31bb6f-6201-4ff6-ac2e-d4ba2511dc75" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.webservicex.net/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:GetSupplierByZipCode>\r
         <!--Optional:-->\r
         <web:zip>?</web:zip>\r
      </web:GetSupplierByZipCode>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/MediCareSupplierSoap/GetSupplierByZipCodeRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="caeeb25f-9950-4567-95f1-8d92e2359916" wsaVersion="NONE" name="MediCareSupplierSoap" type="wsdl" bindingName="{http://www.webservicex.net/}MediCareSupplierSoap" soapVersion="1_1" anonymous="optional" definition="http://webservicex.net/medicareSupplier.asmx?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservicex.net/medicareSupplier.asmx?wsdl"><con:part><con:url>http://webservicex.net/medicareSupplier.asmx?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.webservicex.net/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://www.webservicex.net/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:documentation>This section provides names, addresses, and contact information for suppliers that provide services or products under the Medicare program. A supplier is an individual or entity that has agreed to provide health care equipment, items, or services under Medicare. A supplier may provide items such as: Durable Medical Equipment (wheelchairs, walkers, oxygen), Prosthetics (artificial limb replacements or dentures) or Orthotics (mechanical devices used to assist in mobility or supplement the joints and limbs). In addition, a type of supplier can also be Pharmacy/Drug Stores and Optometry/Opticians.This Supplier Directory lists Medicare enrolled pharmacies and suppliers.</wsdl:documentation>
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://www.webservicex.net/">
      <s:element name="GetSupplierByZipCode">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="zip" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSupplierByZipCodeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetSupplierByZipCodeResult" type="s:boolean"/>
            <s:element minOccurs="1" maxOccurs="1" name="SupplierDataLists" type="tns:SupplierDataList"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="SupplierDataList">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="SupplierDatas" type="tns:ArrayOfSupplierData"/>
          <s:element minOccurs="1" maxOccurs="1" name="TotalRecords" type="s:int"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfSupplierData">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="SupplierData" type="tns:SupplierData"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="SupplierData">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="SupplierNumber" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="CompanyName" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Address1" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Address2" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="State" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Zip" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="ZipPlus4" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Telephone" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Description" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="IsSupplierParticipating" type="s:string"/>
        </s:sequence>
      </s:complexType>
      <s:element name="GetSupplierByCity">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSupplierByCityResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetSupplierByCityResult" type="s:boolean"/>
            <s:element minOccurs="1" maxOccurs="1" name="SupplierDataLists" type="tns:SupplierDataList"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSupplierBySupplyType">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="description" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSupplierBySupplyTypeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetSupplierBySupplyTypeResult" type="s:boolean"/>
            <s:element minOccurs="1" maxOccurs="1" name="SupplierDataLists" type="tns:SupplierDataList"/>
          </s:sequence>
        </s:complexType>
      </s:element>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="GetSupplierByZipCodeSoapIn">
    <wsdl:part name="parameters" element="tns:GetSupplierByZipCode"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierByZipCodeSoapOut">
    <wsdl:part name="parameters" element="tns:GetSupplierByZipCodeResponse"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierByCitySoapIn">
    <wsdl:part name="parameters" element="tns:GetSupplierByCity"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierByCitySoapOut">
    <wsdl:part name="parameters" element="tns:GetSupplierByCityResponse"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierBySupplyTypeSoapIn">
    <wsdl:part name="parameters" element="tns:GetSupplierBySupplyType"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierBySupplyTypeSoapOut">
    <wsdl:part name="parameters" element="tns:GetSupplierBySupplyTypeResponse"/>
  </wsdl:message>
  <wsdl:portType name="MediCareSupplierSoap">
    <wsdl:operation name="GetSupplierByZipCode">
      <wsdl:documentation>Get Supplier details by Zip Code</wsdl:documentation>
      <wsdl:input message="tns:GetSupplierByZipCodeSoapIn"/>
      <wsdl:output message="tns:GetSupplierByZipCodeSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierByCity">
      <wsdl:documentation>Get Supplier details by City</wsdl:documentation>
      <wsdl:input message="tns:GetSupplierByCitySoapIn"/>
      <wsdl:output message="tns:GetSupplierByCitySoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierBySupplyType">
      <wsdl:documentation>Get Supplier details by Supply Type</wsdl:documentation>
      <wsdl:input message="tns:GetSupplierBySupplyTypeSoapIn"/>
      <wsdl:output message="tns:GetSupplierBySupplyTypeSoapOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="MediCareSupplierHttpGet"/>
  <wsdl:portType name="MediCareSupplierHttpPost"/>
  <wsdl:binding name="MediCareSupplierSoap" type="tns:MediCareSupplierSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetSupplierByZipCode">
      <soap:operation soapAction="http://www.webservicex.net/GetSupplierByZipCode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierByCity">
      <soap:operation soapAction="http://www.webservicex.net/GetSupplierByCity" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierBySupplyType">
      <soap:operation soapAction="http://www.webservicex.net/GetSupplierBySupplyType" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MediCareSupplierSoap12" type="tns:MediCareSupplierSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetSupplierByZipCode">
      <soap12:operation soapAction="http://www.webservicex.net/GetSupplierByZipCode" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierByCity">
      <soap12:operation soapAction="http://www.webservicex.net/GetSupplierByCity" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierBySupplyType">
      <soap12:operation soapAction="http://www.webservicex.net/GetSupplierBySupplyType" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MediCareSupplierHttpGet" type="tns:MediCareSupplierHttpGet">
    <http:binding verb="GET"/>
  </wsdl:binding>
  <wsdl:binding name="MediCareSupplierHttpPost" type="tns:MediCareSupplierHttpPost">
    <http:binding verb="POST"/>
  </wsdl:binding>
  <wsdl:service name="MediCareSupplier">
    <wsdl:documentation>This section provides names, addresses, and contact information for suppliers that provide services or products under the Medicare program. A supplier is an individual or entity that has agreed to provide health care equipment, items, or services under Medicare. A supplier may provide items such as: Durable Medical Equipment (wheelchairs, walkers, oxygen), Prosthetics (artificial limb replacements or dentures) or Orthotics (mechanical devices used to assist in mobility or supplement the joints and limbs). In addition, a type of supplier can also be Pharmacy/Drug Stores and Optometry/Opticians.This Supplier Directory lists Medicare enrolled pharmacies and suppliers.</wsdl:documentation>
    <wsdl:port name="MediCareSupplierSoap" binding="tns:MediCareSupplierSoap">
      <soap:address location="http://webservicex.net/medicareSupplier.asmx"/>
    </wsdl:port>
    <wsdl:port name="MediCareSupplierSoap12" binding="tns:MediCareSupplierSoap12">
      <soap12:address location="http://webservicex.net/medicareSupplier.asmx"/>
    </wsdl:port>
    <wsdl:port name="MediCareSupplierHttpGet" binding="tns:MediCareSupplierHttpGet">
      <http:address location="http://webservicex.net/medicareSupplier.asmx"/>
    </wsdl:port>
    <wsdl:port name="MediCareSupplierHttpPost" binding="tns:MediCareSupplierHttpPost">
      <http:address location="http://webservicex.net/medicareSupplier.asmx"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://webservicex.net/medicareSupplier.asmx</con:endpoint></con:endpoints><con:operation id="13559a4c-afaf-4ffa-b3f4-3f389ce61fba" isOneWay="false" action="http://www.webservicex.net/GetSupplierByCity" name="GetSupplierByCity" bindingOperationName="GetSupplierByCity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c9f341b8-b577-47e8-b156-715d94380832" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webservicex.net/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:GetSupplierByCity>\r
         <!--Optional:-->\r
         <web:City>?</web:City>\r
      </web:GetSupplierByCity>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/GetSupplierByCity"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="01ea20ee-1016-4d5a-8517-388889b80dc9" isOneWay="false" action="http://www.webservicex.net/GetSupplierBySupplyType" name="GetSupplierBySupplyType" bindingOperationName="GetSupplierBySupplyType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cda66e68-546a-4b60-87c3-9783db2aceca" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webservicex.net/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:GetSupplierBySupplyType>\r
         <!--Optional:-->\r
         <web:description>?</web:description>\r
      </web:GetSupplierBySupplyType>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/GetSupplierBySupplyType"/></con:call></con:operation><con:operation id="cd4813c1-7359-43bb-a563-071d232fcc29" isOneWay="false" action="http://www.webservicex.net/GetSupplierByZipCode" name="GetSupplierByZipCode" bindingOperationName="GetSupplierByZipCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c929476a-b57d-4a0d-85cd-415c2df60aee" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webservicex.net/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:GetSupplierByZipCode>\r
         <!--Optional:-->\r
         <web:zip>?</web:zip>\r
      </web:GetSupplierByZipCode>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/GetSupplierByZipCode"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" id="e3ad84be-14d9-4ac7-a3a3-a60de1e5600d" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:8080" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://localhost:8080</con:endpoint></con:endpoints><con:resource name="" path="/student" id="8c2c4aa9-7b57-4fe2-91e2-983a2aa4ffeb"><con:settings/><con:parameters/><con:method name="1" id="8c1bc77a-d834-4a36-bfd8-15faa61b7cf6" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="8baf8537-6207-42fc-a9b1-75fbfbde2c5c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request>[
  {
	"id": "",
	"name": ""
  }
]</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="d66dbabe-8691-45ea-8aef-417c2c326960" name="ListTimeZonaTests"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="b60e00c6-24d6-46c7-a6e6-6662b181befe" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ListTimeZoneTests" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getListTimeZone" id="4473dd67-bf3b-40e6-acf6-cd1629e94894"><con:settings/><con:config service="http://api.timezonedb.com" resourcePath="/v2/list-time-zone" methodName="List-time-zone 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getListTimeZone" id="71dc1f55-fb02-4db7-af99-039203f2386e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.timezonedb.com</con:endpoint><con:request/><con:originalUri>http://api.timezonedb.com/v2/list-time-zone</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="0798538a-c152-4935-9697-e6f2e4278e0c" name="AssertStatusCode==200OK"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="d25b730d-7ceb-4a74-bca4-26cdcf6d6670" name="AssertResultStatus==&quot;OK&quot;"><con:configuration><path>/result/status/text()</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="format" value=""/>
  <con:entry key="key" value="4QBT9RW8XQ1O"/>
</con:parameters><con:parameterOrder><con:entry>callback</con:entry><con:entry>fields</con:entry><con:entry>country</con:entry><con:entry>zone</con:entry><con:entry>key</con:entry><con:entry>format</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="getListTimeZoneXml" id="9b4fc542-6a07-4320-8fe9-f78b754ec7fe"><con:settings/><con:config service="http://api.timezonedb.com" resourcePath="/v2/list-time-zone" methodName="List-time-zone 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getListTimeZoneXml" id="71dc1f55-fb02-4db7-af99-039203f2386e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.timezonedb.com</con:endpoint><con:request/><con:originalUri>http://api.timezonedb.com/v2/list-time-zone</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ac53535f-83ad-4d4f-85e1-e3163d70daf2" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="8e99c624-d2c5-4119-aa2c-f07326ea6815" name="XPath Match"><con:configuration><path>/result/status</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="format" value="xml"/>
  <con:entry key="key" value="4QBT9RW8XQ1O"/>
</con:parameters><con:parameterOrder><con:entry>callback</con:entry><con:entry>fields</con:entry><con:entry>country</con:entry><con:entry>zone</con:entry><con:entry>key</con:entry><con:entry>format</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Conditional Goto" id="45b0d429-ab63-4022-ab23-1aea88238577"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Condition 1</con:name><con:type>XPATH</con:type><con:expression>(//result/zones/zone/countryCode/text())="AD"</con:expression><con:targetStep>status_ok</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="4367a4e8-6c52-46a3-96ef-8aad62e73bdc"><con:settings/><con:config><script>log.info("test passed!")</script></con:config></con:testStep><con:testStep type="restrequest" name="getListTimeZoneJson" id="f8b7dad7-1482-4b2f-b19b-742befe765c1"><con:settings/><con:config service="http://api.timezonedb.com" resourcePath="/v2/list-time-zone" methodName="List-time-zone 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getListTimeZoneJson" id="71dc1f55-fb02-4db7-af99-039203f2386e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.timezonedb.com</con:endpoint><con:request/><con:originalUri>http://api.timezonedb.com/v2/list-time-zone</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ef25d0aa-89f8-44d0-9a30-25780afa7ad9" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="77c60f91-b950-4b1a-9cbc-58f072e37d1b" name="status_ok"><con:configuration><path>$status</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c1594fa1-d6b9-4924-96e6-4bf8fd28c75b"><con:configuration/></con:assertion><con:assertion type="Response SLA Assertion" id="011d67fc-e85b-412e-a6f0-98cbaa097e67" name="sla_1500"><con:configuration><SLA>1500</SLA></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="f981e135-f4a2-4bc2-9d8f-bab42fc570e4" name="zone_count"><con:configuration><path>$.zones</path><content>3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" id="a3054244-07aa-434f-a3d9-deeac3cbe040" name="JsonPath RegEx Match"><con:configuration><path>$.zones[1].gmtOffset</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>(^\d+$)</regEx></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" id="9537a14e-7436-4d59-a968-646f86b11abf" name="JsonPath RegEx Match 1"><con:configuration><path>$.zones[1]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>(\{\"countryCode\":\"[A-Z]{2}\",\"countryName\":\"[A-Z]{1}[a-z]{1,}\s*[A-Za-z]*\",\"zoneName\":\"[A-Z]{1}[a-z]{1,}/*\s*[A-Z]*[a-z]*\",\"gmtOffset\":\d{1,6},\"timestamp\":\d{10}\})</regEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="format" value="json"/>
  <con:entry key="key" value="4QBT9RW8XQ1O"/>
  <con:entry key="country" value="UA"/>
</con:parameters><con:parameterOrder><con:entry>callback</con:entry><con:entry>fields</con:entry><con:entry>country</con:entry><con:entry>zone</con:entry><con:entry>key</con:entry><con:entry>format</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="workWithExternalLibrary" id="6173eed6-2635-4ca6-b8a4-cfd785afe1dc"><con:settings/><con:config><script>import example.*;

def example = new ExamplesAPITesting();

def dataDigest = example.generateDataDigest("Lecture 8");
log.info(dataDigest);

def sum = example.getSum(3, 5);
log.info(sum);

log.info(example.hello("Petya"));</script></con:config></con:testStep><con:testStep type="restrequest" name="getListTimeZoneJson_1" id="d0795c71-7222-43b3-b72a-dd52bbc37d59"><con:settings/><con:config service="http://api.timezonedb.com" resourcePath="/v2/list-time-zone" methodName="List-time-zone 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getListTimeZoneJson_1" id="71dc1f55-fb02-4db7-af99-039203f2386e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.timezonedb.com</con:endpoint><con:request/><con:originalUri>http://api.timezonedb.com/v2/list-time-zone</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ef25d0aa-89f8-44d0-9a30-25780afa7ad9" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="77c60f91-b950-4b1a-9cbc-58f072e37d1b" name="status_ok"><con:configuration><path>$status</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c1594fa1-d6b9-4924-96e6-4bf8fd28c75b"><con:configuration/></con:assertion><con:assertion type="Response SLA Assertion" id="011d67fc-e85b-412e-a6f0-98cbaa097e67" name="sla_1500"><con:configuration><SLA>1500</SLA></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="f981e135-f4a2-4bc2-9d8f-bab42fc570e4" name="zone_count"><con:configuration><path>$.zones</path><content>424</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" id="a3054244-07aa-434f-a3d9-deeac3cbe040" name="JsonPath RegEx Match"><con:configuration><path>$.zones[1].gmtOffset</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>(^\d+$)</regEx></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" id="9537a14e-7436-4d59-a968-646f86b11abf" name="JsonPath RegEx Match 1" disabled="true"><con:configuration><path>$.zones[1]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>(\{\"countryCode\":\"[A-Z]{2}\",\"countryName\":\"[A-Z]{1}[a-z]{1,}\s*[A-Za-z]*\",\"zoneName\":\"[A-Z]{1}[a-z]{1,}/*\s*[A-Z]*[a-z]*\",\"gmtOffset\":\d{1,6},\"timestamp\":\d{10}\})</regEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="73dcc6b8-3250-4e57-aa04-99a4038d8469" name="JsonPath Match 2" disabled="true"><con:configuration><path>$.zones[1]</path><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="format" value="json"/>
  <con:entry key="key" value="4QBT9RW8XQ1O"/>
</con:parameters><con:parameterOrder><con:entry>callback</con:entry><con:entry>fields</con:entry><con:entry>country</con:entry><con:entry>zone</con:entry><con:entry>key</con:entry><con:entry>format</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="gvs" id="b9083b44-b3c7-48a0-9409-627f19dc86b8"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//def testCase = messageExchange.modelItem.testCase
def testCase = messageExchange.modelItem.testCase

//def responseContent = testCase.getTestStepByName("getListTimeZoneJson_1").getPropertyValue("response")
//def slurperResponse = new JsonSlurper().parseText(responseContent)

//for(i in 0..423){
//					def gmtOffset = slurperResponse.zones[i].gmtOffset.toString()
//					if(gmtOffset=="7200"){
//						def timestamp = slurperResponse.zones[i].timestamp.toString()
//						testCase.testSteps["Properties"].setPropertyValue("timestamp", timestamp)
//						log.info(timestamp)
//						break
//				}
//	}</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="63206ec6-1d68-4845-bf1a-0629db65ac42"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="gvs_2" id="01991be1-d1e5-42ef-93e3-520bfbd0d0ab"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testCase = messageExchange.modelItem.testCase

def responseContent = testCase.getTestStepByName("getListTimeZoneJson_1").getPropertyValue("response")
def slurperResponse = new JsonSlurper().parseText(responseContent)

for(i in 0..423){
					def gmtOffset = slurperResponse.zones[i].gmtOffset.toString()
					if(gmtOffset=="7200"){
						def timestamp = slurperResponse.zones[i].timestamp.toString()
						testCase.testSteps["Properties"].setPropertyValue("timestamp", timestamp)
						log.info(timestamp)
						break
						}
	}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9b3ed2da-5aa6-4dcf-b3c6-1e5976e7679e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ListTimeZoneByCountryTests" searchProperties="true"><con:settings/><con:testStep type="properties" name="prop" id="d578949c-73d2-4d96-8795-d78f1ed7f9c4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>country1</con:name><con:value>UA</con:value></con:property><con:property><con:name>format1</con:name><con:value>xml</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="getListTimeZoneCountryZoneUA" id="06b3b515-df5a-478e-a4ed-de82b481a1ab"><con:settings/><con:config service="http://api.timezonedb.com" resourcePath="/v2/list-time-zone" methodName="List-time-zone 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getListTimeZoneCountryZoneUA" id="71dc1f55-fb02-4db7-af99-039203f2386e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.timezonedb.com</con:endpoint><con:request/><con:originalUri>http://api.timezonedb.com/v2/list-time-zone</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="0798538a-c152-4935-9697-e6f2e4278e0c" name="AssertStatusCode==200OK"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="d25b730d-7ceb-4a74-bca4-26cdcf6d6670" name="AssertResultStatus==&quot;OK&quot;"><con:configuration><path>/result/status/text()</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="6b0e2849-405b-44a7-a704-f61667a35cb9" name="AssertCountryCode==&quot;UA&quot;"><con:configuration><path>/result/zones/zone[1]/countryCode/text()</path><content>UA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c175b2c0-06ea-4146-91a0-cd52318ae8e3" name="XPath Match"><con:configuration><path>/result/zones/zone[1]/zoneName</path><content>Europe/Kiev</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4f8e42f2-27eb-4771-90f1-678d6c65a329" name="Contains"><con:configuration><token>OK</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="c087c047-063e-4fe3-9820-9f2a7a4c92e0" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="XPath Match" id="1ce56931-9893-4c08-9632-c2484687d214" name="countZone"><con:configuration><path>count(//result/zones/zone)</path><content>3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="61488e56-d817-46a7-ba95-80352bf97d24" name="xpath equals tree"><con:configuration><path>//result/zones/zone[2]</path><content><![CDATA[<zone>
  <countryCode>UA</countryCode>
  <countryName>Ukraine</countryName>
  <zoneName>Europe/Uzhgorod</zoneName>
  <gmtOffset>7200</gmtOffset>
  <timestamp>1511814965</timestamp>
</zone>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XQuery Match" id="13944b69-580b-4691-9196-8e5f2ae0e193" name="XQueryContainsUA"><con:configuration><path>&lt;result>
	{
	for $x in //result/zones/zone
	return &lt;countryCode>{data($x/countryCode/text())}&lt;/countryCode> 
	}
&lt;/result></path><content><![CDATA[<result>
  <countryCode>UA</countryCode>
  <countryCode>UA</countryCode>
  <countryCode>UA</countryCode>
</result>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="format" value="${format1}"/>
  <con:entry key="key" value="4QBT9RW8XQ1O"/>
  <con:entry key="country" value="${country1}"/>
</con:parameters><con:parameterOrder><con:entry>callback</con:entry><con:entry>fields</con:entry><con:entry>country</con:entry><con:entry>zone</con:entry><con:entry>key</con:entry><con:entry>format</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="propTransfer" id="f018fc63-45aa-44f9-ae9e-e4e5c95717a0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>tempCountry</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getListTimeZoneCountryZoneUA</con:sourceStep><con:sourcePath>/result/zones/zone[3]/countryCode</con:sourcePath><con:targetType>country</con:targetType><con:targetStep>getListTimeZoneUA</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getListTimeZoneUA" id="d9b40f6a-782d-4601-b80c-bf833e5308ba"><con:settings/><con:config service="http://api.timezonedb.com" resourcePath="/v2/list-time-zone" methodName="List-time-zone 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getListTimeZoneUA" id="71dc1f55-fb02-4db7-af99-039203f2386e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.timezonedb.com</con:endpoint><con:request>UA</con:request><con:originalUri>http://api.timezonedb.com/v2/list-time-zone</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="0798538a-c152-4935-9697-e6f2e4278e0c" name="AssertStatusCode==200OK"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="d25b730d-7ceb-4a74-bca4-26cdcf6d6670" name="AssertResultStatus==&quot;OK&quot;"><con:configuration><path>/result/status/text()</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="6b0e2849-405b-44a7-a704-f61667a35cb9" name="AssertCountryCode==&quot;UA&quot;"><con:configuration><path>/result/zones/zone[1]/countryCode/text()</path><content>UA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c175b2c0-06ea-4146-91a0-cd52318ae8e3" name="XPath Match"><con:configuration><path>/result/zones/zone[1]/zoneName</path><content>Europe/Kiev</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="format" value="xml"/>
  <con:entry key="key" value="4QBT9RW8XQ1O"/>
  <con:entry key="country" value="UA"/>
</con:parameters><con:parameterOrder><con:entry>callback</con:entry><con:entry>fields</con:entry><con:entry>country</con:entry><con:entry>zone</con:entry><con:entry>key</con:entry><con:entry>format</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="delay1" id="e677ba80-c908-4cfd-b827-31538f933708"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="getListTimeZoneUSA" id="67d86f47-29d3-4a3b-9084-83a16d667f12"><con:settings/><con:config service="http://api.timezonedb.com" resourcePath="/v2/list-time-zone" methodName="List-time-zone 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getListTimeZoneUSA" id="71dc1f55-fb02-4db7-af99-039203f2386e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.timezonedb.com</con:endpoint><con:request>UA</con:request><con:originalUri>http://api.timezonedb.com/v2/list-time-zone</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="0798538a-c152-4935-9697-e6f2e4278e0c" name="AssertStatusCode==200OK"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="d25b730d-7ceb-4a74-bca4-26cdcf6d6670" name="AssertResultStatus==&quot;OK&quot;"><con:configuration><path>/result/status/text()</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="6b0e2849-405b-44a7-a704-f61667a35cb9" name="AssertCountryCode==&quot;UA&quot;"><con:configuration><path>/result/zones/zone[1]/countryCode/text()</path><content>US</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c175b2c0-06ea-4146-91a0-cd52318ae8e3" name="XPath Match"><con:configuration><path>/result/zones/zone[1]/zoneName</path><content>America/Adak</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="format" value="xml"/>
  <con:entry key="key" value="4QBT9RW8XQ1O"/>
  <con:entry key="country" value="US"/>
</con:parameters><con:parameterOrder><con:entry>callback</con:entry><con:entry>fields</con:entry><con:entry>country</con:entry><con:entry>zone</con:entry><con:entry>key</con:entry><con:entry>format</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="propTransferForUsaZone" id="7b60d757-f025-4aae-ade3-f027b4e47621"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>getUSAzone</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getListTimeZoneUSA</con:sourceStep><con:sourcePath>result/zones/zone[5]/zoneName</con:sourcePath><con:targetType>zone</con:targetType><con:targetStep>getListTimeZoneUSA_setZone</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getListTimeZoneUSA_setZone" id="7b0f0243-44fa-4b01-8756-61e8461ed07a"><con:settings/><con:config service="http://api.timezonedb.com" resourcePath="/v2/list-time-zone" methodName="List-time-zone 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getListTimeZoneUSA_setZone" id="71dc1f55-fb02-4db7-af99-039203f2386e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.timezonedb.com</con:endpoint><con:request>UA</con:request><con:originalUri>http://api.timezonedb.com/v2/list-time-zone</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="0798538a-c152-4935-9697-e6f2e4278e0c" name="AssertStatusCode==200OK"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="d25b730d-7ceb-4a74-bca4-26cdcf6d6670" name="AssertResultStatus==&quot;OK&quot;"><con:configuration><path>/result/status/text()</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="format" value="xml"/>
  <con:entry key="zone" value="America/Denver"/>
  <con:entry key="key" value="4QBT9RW8XQ1O"/>
  <con:entry key="fields" value="zoneName,gmtOffset"/>
</con:parameters><con:parameterOrder><con:entry>callback</con:entry><con:entry>fields</con:entry><con:entry>country</con:entry><con:entry>zone</con:entry><con:entry>key</con:entry><con:entry>format</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5aed7a20-9742-46a5-b4e6-8442804b6ab2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ListTimeZoneByCountryZoneTests" searchProperties="true"><con:settings/><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="732d9982-8da7-4c0b-98c0-bb694ac92ae8" name="MediCare"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="68483c11-7d55-474d-b79c-1ee81544ff6c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getSupplierByCityTest" searchProperties="true"><con:settings/><con:testStep type="request" name="SOAP Request" id="18869e9c-4d7f-4307-a81d-90eda600d1b5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MediCareSupplierSoap</con:interface><con:operation>GetSupplierByCity</con:operation><con:request name="SOAP Request" id="0cd9cab1-37de-4da8-94e9-2ff9f90b4b90"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webservicex.net/">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetSupplierByCity>
         <!--Optional:-->
         <web:City>New York</web:City>
      </web:GetSupplierByCity>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="58dbb48a-1692-45a7-acd4-33ec72a86e63"/><con:assertion type="Valid HTTP Status Codes" id="827525b4-121f-4198-aec8-a13107eb2200" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="96bb8aa4-172c-4930-8ace-c251692cfb43" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://www.webservicex.net/';
//soap:Envelope/soap:Body/ns1:GetSupplierByCityResponse/ns1:GetSupplierByCityResult/text()</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="REST Request" id="3cea1ac6-60cd-4cc2-a72d-5b0bc5ba3cb4"><con:settings/><con:config service="http://api.timezonedb.com" methodName="List-time-zone 1" resourcePath="/v2/list-time-zone" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request" id="9d24bba3-5ea8-4079-b695-004cc20f2187" mediaType="application/json"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://api.timezonedb.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="c6895b43-b354-4a44-abc1-105da2b5f918" name="Student_REST_Mock_service_Tests"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="7e7c5265-7a4c-4542-8a9f-e5e28f509f2d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createNewStudent" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="createNewStudent" id="213de9a1-ac48-491a-aab2-77d379920f5e"><con:settings/><con:config service="http://localhost:8080" resourcePath="/student" methodName="1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createNewStudent" id="8baf8537-6207-42fc-a9b1-75fbfbde2c5c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request>[
  {
	"id": "1",
	"name": "Vasya"
  }
]</con:request><con:originalUri>http://localhost/student</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:restMockService id="af326aeb-5b69-4da1-b31a-39d970decf7c" port="8080" path="/" host="http://localhost" name="Student_REST_Mock_Service" docroot=""><con:settings/><con:properties/><con:restMockAction name="/student/" method="POST" resourcePath="/student/" id="56a63fc5-eea1-4ae2-8bb8-81ae96c78d12"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="CreateNewStudentsResponse" id="bbed3cff-caab-4cea-9a55-4935b23fe7fc" httpResponseStatus="201"><con:settings/><con:responseContent>[
  {
	"id": "1",
	"name": "Vasya"
  }
]</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>